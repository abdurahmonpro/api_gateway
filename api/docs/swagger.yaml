definitions:
  auth_service.CreateUser:
    properties:
      email:
        type: string
      key:
        type: string
      name:
        type: string
      secret:
        type: string
    type: object
  auth_service.LoginRequest:
    properties:
      name:
        type: string
      secret:
        type: string
    type: object
  auth_service.TokenResponse:
    properties:
      Token:
        type: string
    type: object
  auth_service.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      key:
        type: string
      name:
        type: string
      secret:
        type: string
      updated_at:
        type: string
    type: object
  auth_service.UserListResponse:
    properties:
      count:
        type: integer
      users:
        items:
          $ref: '#/definitions/auth_service.User'
        type: array
    type: object
  http.Response:
    properties:
      data: {}
      description:
        type: string
      status:
        type: string
    type: object
info:
  contact: {}
paths:
  /User:
    get:
      consumes:
      - application/json
      description: Get User List
      operationId: get_User_list
      parameters:
      - description: Offset
        in: query
        name: offset
        type: integer
      - description: Limit
        in: query
        name: limit
        type: integer
      - description: Search
        in: query
        name: search
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: UserListResponse
          schema:
            $ref: '#/definitions/auth_service.UserListResponse'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      security:
      - ApiKeyAuth: []
      summary: Get User List
      tags:
      - User
  /User/{id}:
    get:
      consumes:
      - application/json
      description: Get User By ID
      operationId: get_User_by_id
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: UserResponse
          schema:
            $ref: '#/definitions/auth_service.User'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Get User By ID
      tags:
      - User
  /login:
    post:
      consumes:
      - application/json
      description: Login
      operationId: login
      parameters:
      - description: LoginRequestBody
        in: body
        name: login
        required: true
        schema:
          $ref: '#/definitions/auth_service.LoginRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.TokenResponse'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Login
      tags:
      - Authentication
  /register:
    post:
      consumes:
      - application/json
      description: Register
      operationId: register
      parameters:
      - description: CreateUserRequest
        in: body
        name: register
        required: true
        schema:
          $ref: '#/definitions/auth_service.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: User data
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  $ref: '#/definitions/auth_service.User'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
        "500":
          description: Server Error
          schema:
            allOf:
            - $ref: '#/definitions/http.Response'
            - properties:
                data:
                  type: string
              type: object
      summary: Register
      tags:
      - Authentication
  /user:
    post:
      consumes:
      - application/json
      description: Create User
      operationId: create_user
      parameters:
      - description: CreateUserRequestBody
        in: body
        name: profile
        required: true
        schema:
          $ref: '#/definitions/auth_service.CreateUser'
      produces:
      - application/json
      responses:
        "201":
          description: UserResponse
          schema:
            $ref: '#/definitions/auth_service.User'
        "400":
          description: Invalid Argument
          schema:
            type: string
        "500":
          description: Server Error
          schema:
            type: string
      summary: Create User
      tags:
      - User
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
